<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>看代码，看世界</title>
    <description>普通的工程师在普通的公司里做着普通的工作，看着普通的代码，调着普通的bug。 欢迎来到普通的博客，希望大家多多支持，一起学习进步！
</description>
    <link>http://myvps:4000/blog/</link>
    <atom:link href="http://myvps:4000/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 07 Aug 2016 20:56:16 +0800</pubDate>
    <lastBuildDate>Sun, 07 Aug 2016 20:56:16 +0800</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>Java集合框架--概述</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;概述&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Java&lt;/code&gt;中的集合框架有两种，一种是&lt;code class=&quot;highlighter-rouge&quot;&gt;Map&lt;/code&gt;，一种是&lt;code class=&quot;highlighter-rouge&quot;&gt;Collection&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;Collection&lt;/code&gt;是一种线性的数据结构，&lt;code class=&quot;highlighter-rouge&quot;&gt;Map&lt;/code&gt;则是一种key-value形式的数据结构。&lt;code class=&quot;highlighter-rouge&quot;&gt;Java&lt;/code&gt;中的集合框架十分常用，比如&lt;code class=&quot;highlighter-rouge&quot;&gt;HashMap&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayList&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;LinkedList&lt;/code&gt;等，下面介绍一下集合框架的关系，后续再深入每个类的内部，分析其实现原理与应用场景。&lt;/p&gt;

&lt;h1 id=&quot;collection&quot;&gt;Collection&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://i1.piimg.com/567571/fb3a6966923d6f86.png&quot; alt=&quot;&quot; /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Collection&lt;/code&gt;的派生类主要有三种，&lt;code class=&quot;highlighter-rouge&quot;&gt;List&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;Set&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;Queue&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;List&lt;/code&gt;在数据结构上可以称为链表，其特点是它记录了每个元素所在的位置，可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;get(int index)&lt;/code&gt;方法获取对应位置上的元素，或者通过&lt;code class=&quot;highlighter-rouge&quot;&gt;set(int index, E value)&lt;/code&gt;向指定位置插入元素，该位置之后的元素将依次后移一位。也可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;indexOf(E value)&lt;/code&gt;获取该元素在List中对应的位置。典型应用是&lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayList&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;LinkedList&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;Stack&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Set&lt;/code&gt;在数据结构上可以称为集合，其特点是它所包含的元素互不相同，其实也就是数学意义上的&lt;code class=&quot;highlighter-rouge&quot;&gt;集合&lt;/code&gt;。元素之间是否相同的判断，是调用&lt;code class=&quot;highlighter-rouge&quot;&gt;equals(Object o)&lt;/code&gt;方法进行判断，当不实现&lt;code class=&quot;highlighter-rouge&quot;&gt;equals(Object o)&lt;/code&gt;方法时，判断的是这两个元素在内存中的地址是否相同。典型应用是&lt;code class=&quot;highlighter-rouge&quot;&gt;HashSet&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;TreeSet&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Queue&lt;/code&gt;在数据结构上可以称为队列，其特点是队列中的元素在一个方向上总是先进先出的，可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;offer(E value)&lt;/code&gt;向队尾插入元素，也可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;peek(E value)&lt;/code&gt;从队首获取一个元素。&lt;code class=&quot;highlighter-rouge&quot;&gt;Queue&lt;/code&gt;的一个子类&lt;code class=&quot;highlighter-rouge&quot;&gt;Deque&lt;/code&gt;是一个双向队列，也就是既可以向对尾插入元素，也可以向队首插入元素，既可以从队首获取元素，也可以从队尾获取元素。在一个方向上，其同样满足队列的先进先出特性。典型应用有&lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayBlockingQueue&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;LinkedList&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;PriorityQueue&lt;/code&gt;。&lt;/p&gt;

&lt;h1 id=&quot;map&quot;&gt;Map&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://i1.piimg.com/567571/a7346c2ed2dc4cf0.png&quot; alt=&quot;&quot; /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Map&lt;/code&gt;是&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;与&lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;之间的映射关系，这种关系可以是一对一，一对多，多对一或多对多，根据不同的实现会有不同的映射关系与限制。常用的&lt;code class=&quot;highlighter-rouge&quot;&gt;Cache&lt;/code&gt;其实也是一种&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;与&lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;的映射关系。典型应用有&lt;code class=&quot;highlighter-rouge&quot;&gt;HashMap&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;TreeSet&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;LinkedHashMap&lt;/code&gt;。&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;结语&lt;/h1&gt;
&lt;p&gt;第一篇我们总览了&lt;code class=&quot;highlighter-rouge&quot;&gt;Java&lt;/code&gt;的集合框架，下面将逐一介绍&lt;code class=&quot;highlighter-rouge&quot;&gt;Collection&lt;/code&gt;与&lt;code class=&quot;highlighter-rouge&quot;&gt;Map&lt;/code&gt;的常用实现以及其实现原理与核心算法。&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Aug 2016 17:06:38 +0800</pubDate>
        <link>http://myvps:4000/blog/java/2016/08/05/Collections-in-java.html</link>
        <guid isPermaLink="true">http://myvps:4000/blog/java/2016/08/05/Collections-in-java.html</guid>
        
        
        <category>Java</category>
        
      </item>
    
      <item>
        <title>记一次mac上的文件乱码处理</title>
        <description>&lt;p&gt;起因是某次需求需要洗一批数据，判断国内、国际、港澳台地区订单，打上不同的标识。订单数据中存有国家以及省市字段，需要导出订单数据，在线下打上对应标识。于是乎，我写了个shell的脚本，希望能搞定这个事儿（后来的事实狠狠的打了我的脸，不过那是另一个故事了）。在意料之中的，我遇到了中文编码的问题。&lt;/p&gt;

&lt;p&gt;别的不说，先贴代码&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ORDER_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;RESULT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-result.csv&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;orderNum,regionType&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;$RESULT&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Wash &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ORDER_FILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; start...&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ORDER_ARRAY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;awk -F&lt;span class=&quot;s1&quot;&gt;&#39;,&#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;{print $1}&#39;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ORDER_FILE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;COUNTRY_ARRAY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;awk -F&lt;span class=&quot;s1&quot;&gt;&#39;,&#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;{print $2}&#39;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ORDER_FILE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;PROVINCE_ARRAY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;awk -F&lt;span class=&quot;s1&quot;&gt;&#39;,&#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;{print $3}&#39;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ORDER_FILE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;FILE_LEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;wc -l &lt;span class=&quot;nv&quot;&gt;$ORDER_FILE&lt;/span&gt; | awk &lt;span class=&quot;s1&quot;&gt;&#39;{print $1}&#39;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt; i &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1; i &amp;lt; &lt;span class=&quot;nv&quot;&gt;$FILE_LEN&lt;/span&gt;; i++ &lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
&lt;span class=&quot;k&quot;&gt;do
	if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -z &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;COUNTRY_ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[i]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ; &lt;span class=&quot;k&quot;&gt;then
		&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ORDER_ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[i]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,1&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;$RESULT&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;中国&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;COUNTRY_ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[i]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
		if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;香港&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROVINCE_ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[i]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; -o &lt;span class=&quot;s2&quot;&gt;&quot;澳门&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROVINCE_ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[i]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
			&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ORDER_ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[i]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,3&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;$RESULT&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;台湾&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROVINCE_ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[i]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
			&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ORDER_ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[i]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,4&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;$RESULT&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;fi
	else
		&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ORDER_ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[i]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,2&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;$RESULT&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;fi
done
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Wash &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ORDER_FILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; end...&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Total Order Count in &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ORDER_FILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$FILE_LEN&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; which is include the header&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可以看到，我在脚本中使用了&lt;code class=&quot;highlighter-rouge&quot;&gt;中国&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;台湾&lt;/code&gt;这样的汉字当做条件来判断。写的时候就想过可能遇到中文编码的问题，还特意的用vim copy了一部分的case到单独的一个测试文件测试了一遍，脚本正常work，但是实际的运行结果是失败的，判断条件没有生效，最后的结果都是1。&lt;/p&gt;

&lt;p&gt;google了linux文件乱码问题，发现可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;file&lt;/code&gt;命令查看文件编码，发现我的文件都是&lt;code class=&quot;highlighter-rouge&quot;&gt;ISO8859&lt;/code&gt;格式的，而linux脚本默认读取格式是&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;，编码不一致的问题导致了判断失效。但是，为什么测试文件能通过呢？于是我同样的&lt;code class=&quot;highlighter-rouge&quot;&gt;file&lt;/code&gt;了测试文件，发现编码是&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;，于是，我希望把其余的文件转为&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;格式。我找到了&lt;code class=&quot;highlighter-rouge&quot;&gt;iconv&lt;/code&gt;命令，&lt;code class=&quot;highlighter-rouge&quot;&gt;iconv -f source_encoding -t to_encoding your_file&lt;/code&gt;，需要看自己系统支持哪些encoding可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;iconv -l&lt;/code&gt;查看。很不幸的是，&lt;code class=&quot;highlighter-rouge&quot;&gt;ISO8859&lt;/code&gt;这种编码在我的mac上没找到对应的编码格式，于是我不得不放弃批量转换的做法。换一个角度想，测试文件是我通过vim copy并保存的，那能不能从这个方便着手呢？&lt;/p&gt;

&lt;p&gt;于是我google了&lt;code class=&quot;highlighter-rouge&quot;&gt;vim中文乱码&lt;/code&gt;，发现是vim在打开文件时会查找vim配置项&lt;code class=&quot;highlighter-rouge&quot;&gt;fileencodings&lt;/code&gt;来决定使用哪种编码方式读取文件。我的设置如下：
&lt;code class=&quot;highlighter-rouge&quot;&gt;set fileencodings=ucs-bom,utf-8,utf-16,gbk,cp936,gb18030,big5,gb18030,latin1&lt;/code&gt;
优先级从左至右依次递减，也就是说vim会默认先以&lt;code class=&quot;highlighter-rouge&quot;&gt;ucs-bom&lt;/code&gt;编码方式读取文件，如果不匹配，则使用下一个，直到最后的&lt;code class=&quot;highlighter-rouge&quot;&gt;latin1&lt;/code&gt;。编码方式推荐从严格到宽松，这样能尽量让vim用准确的编码方式读取文件。同时vim还有两个配置&lt;code class=&quot;highlighter-rouge&quot;&gt;fileencoding&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;encoding&lt;/code&gt;同样是表示编码的，&lt;code class=&quot;highlighter-rouge&quot;&gt;fileencoding&lt;/code&gt;表示的是vim保存文件时采用的编码格式，&lt;code class=&quot;highlighter-rouge&quot;&gt;encoding&lt;/code&gt;则是vim内部使用的编码格式，一般不推荐改&lt;code class=&quot;highlighter-rouge&quot;&gt;encoding&lt;/code&gt;，默认是&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;，足以应付绝大多数情况的case了。&lt;/p&gt;

&lt;p&gt;到这里，解决方案已经出来了，虽然比较土，我还是用vim一一打开了数据文件，&lt;code class=&quot;highlighter-rouge&quot;&gt;set fileencoding=utf-8&lt;/code&gt;然后再save得到无乱码文件。&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Jun 2016 14:26:32 +0800</pubDate>
        <link>http://myvps:4000/blog/linux/2016/06/30/encoding-on-linux.html</link>
        <guid isPermaLink="true">http://myvps:4000/blog/linux/2016/06/30/encoding-on-linux.html</guid>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;blank line&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;new line&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sun, 22 May 2016 21:44:15 +0800</pubDate>
        <link>http://myvps:4000/blog/jekyll/update/2016/05/22/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://myvps:4000/blog/jekyll/update/2016/05/22/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
